module(
    name = "stellaroot",
    version = "0.1.0",
)

bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.43.0")
bazel_dep(name = "protobuf", version = "31.1")
bazel_dep(name = "rules_proto_grpc_go", version = "5.1.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_a_h_templ", "com_github_asaskevich_eventbus", "com_github_casbin_casbin_v2", "com_github_casbin_redis_adapter_v2", "com_github_gin_gonic_gin", "com_github_nats_io_nats_go")


bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_pkg", version = "1.1.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# A multi-arch base image with variants, note that it won't work with just "linux/arm64"
oci.pull(
    name = "distroless_static",
    digest = "sha256:c3c3d0230d487c0ad3a0d87ad03ee02ea2ff0b3dcce91ca06a1019e07de05f12",
    image = "gcr.io/distroless/static",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(
    oci,
    "distroless_static",
    "distroless_static_linux_amd64",
    "distroless_static_linux_arm64",
)