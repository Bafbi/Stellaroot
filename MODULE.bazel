"""Stellaroot Bazel module configuration."""

module(
    name = "stellaroot",
    version = "0.1.0",
)

bazel_dep(name = "rules_go", version = "0.55.1")
bazel_dep(name = "gazelle", version = "0.43.0")
bazel_dep(name = "protobuf", version = "31.1")
bazel_dep(name = "rules_proto_grpc_go", version = "5.1.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_a_h_templ", "com_github_asaskevich_eventbus", "com_github_casbin_casbin_v2", "com_github_casbin_redis_adapter_v2", "com_github_gin_gonic_gin", "com_github_nats_io_nats_go", "in_gopkg_yaml_v3")

bazel_dep(name = "tar.bzl", version = "0.3.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.19.4")
bazel_dep(name = "bazel_skylib", version = "1.8.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
git_override(
    module_name = "rules_oci",
    commit = "ac44bb6e1f577ca0d3529646de850e9dea200a2d",
    remote = "https://github.com/bazel-contrib/rules_oci.git",
)
# For testing, we also recommend https://registry.bazel.build/modules/container_structure_test

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Declare external images you need to pull, for example:
oci.pull(
    name = "distroless_base",
    # 'latest' is not reproducible, but it's convenient.
    # During the build we print a WARNING message that includes recommended 'digest' and 'platforms'
    # values which you can use here in place of 'tag' to pin for reproducibility.
    # tag = "latest",
    digest = "sha256:201ef9125ff3f55fda8e0697eff0b3ce9078366503ef066653635a3ac3ed9c26",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)

# For each oci.pull call, repeat the "name" here to expose them as dependencies.
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64")
