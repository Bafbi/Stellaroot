// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.887
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Players() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"playersData()\" x-init=\"loadPlayers()\" class=\"space-y-6\"><!-- Header --><div class=\"flex justify-between items-center\"><h1 class=\"text-3xl font-bold text-gray-900\">Players</h1><button @click=\"refreshPlayers()\" class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors\"><i class=\"fas fa-sync\"></i> <span>Refresh</span></button></div><!-- Players Table --><div class=\"bg-white rounded-lg shadow-md overflow-hidden\"><div class=\"overflow-x-auto\"><table class=\"min-w-full divide-y divide-gray-200\"><thead class=\"bg-gray-50\"><tr><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">UUID</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Labels</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th></tr></thead> <tbody class=\"bg-white divide-y divide-gray-200\"><template x-if=\"loading\"><tr><td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">Loading...</td></tr></template><template x-if=\"!loading && players.length === 0\"><tr><td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">No players found</td></tr></template><template x-for=\"player in players\" :key=\"player.uuid\"><tr class=\"hover:bg-gray-50\"><td class=\"px-6 py-4 whitespace-nowrap\"><code class=\"text-sm text-gray-900\" x-text=\"player.uuid\"></code></td><td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\" x-text=\"player.name || 'Unknown'\"></td><td class=\"px-6 py-4 whitespace-nowrap\"><span :class=\"getStatusBadgeClass(player.status)\" x-text=\"player.status\"></span></td><td class=\"px-6 py-4\"><div class=\"flex flex-wrap gap-1\"><template x-for=\"[key, value] in Object.entries(player.labels || {})\" :key=\"key\"><span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"><span x-text=\"`${key}: ${value}`\"></span></span></template></div></td><td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\"><button @click=\"editPlayer(player)\" class=\"text-blue-600 hover:text-blue-900 transition-colors\"><i class=\"fas fa-edit mr-1\"></i>Edit</button></td></tr></template></tbody></table></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = PlayerEditModal().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("Players - Stellaroot Dashboard").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func PlayerEditModal() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Edit Player Modal --><div x-show=\"showEditModal\" x-cloak class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"><div class=\"relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white\"><div class=\"mt-3\"><div class=\"flex justify-between items-center mb-4\"><h3 class=\"text-lg font-medium text-gray-900\">Edit Player</h3><button @click=\"showEditModal = false\" class=\"text-gray-400 hover:text-gray-600\"><i class=\"fas fa-times\"></i></button></div><form @submit.prevent=\"savePlayer()\" class=\"space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">Player Name</label> <input x-model=\"editingPlayer.name\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"></div><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">Labels</label><div class=\"space-y-2\"><template x-for=\"(label, index) in editingPlayer.labels\" :key=\"index\"><div class=\"flex space-x-2\"><input x-model=\"label.key\" placeholder=\"Key\" class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"> <input x-model=\"label.value\" placeholder=\"Value\" class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"> <button type=\"button\" @click=\"editingPlayer.labels.splice(index, 1)\" class=\"px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600\"><i class=\"fas fa-times\"></i></button></div></template></div><button type=\"button\" @click=\"editingPlayer.labels.push({key: '', value: ''})\" class=\"mt-2 px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"><i class=\"fas fa-plus mr-1\"></i>Add Label</button></div><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">Annotations</label><div class=\"space-y-2\"><template x-for=\"(annotation, index) in editingPlayer.annotations\" :key=\"index\"><div class=\"flex space-x-2\"><input x-model=\"annotation.key\" placeholder=\"Key\" class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"> <input x-model=\"annotation.value\" placeholder=\"Value\" class=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"> <button type=\"button\" @click=\"editingPlayer.annotations.splice(index, 1)\" class=\"px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600\"><i class=\"fas fa-times\"></i></button></div></template></div><button type=\"button\" @click=\"editingPlayer.annotations.push({key: '', value: ''})\" class=\"mt-2 px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"><i class=\"fas fa-plus mr-1\"></i>Add Annotation</button></div><div class=\"flex justify-end space-x-3 pt-4\"><button type=\"button\" @click=\"showEditModal = false\" class=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\">Save Changes</button></div></form></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
