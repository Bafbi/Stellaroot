package templates

templ Players() {
	@Base("Players - Stellaroot Dashboard") {
		<div x-data="playersData()" class="space-y-6">
			<!-- Header -->
			<div class="flex justify-between items-center">
				<h1 class="text-3xl font-bold text-gray-900">Players</h1>
				<button hx-get="/players/fragment" hx-target="#players-tbody" hx-swap="innerHTML" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors">
					<i class="fas fa-sync"></i>
					<span>Refresh</span>
				</button>
			</div>
			
			<!-- Players Table -->
			<div class="bg-white rounded-lg shadow-md overflow-hidden">
				<div class="overflow-x-auto">
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gray-50">
							<tr>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">UUID</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Labels</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
							</tr>
						</thead>
						<tbody id="players-tbody" class="bg-white divide-y divide-gray-200" hx-get="/players/fragment" hx-trigger="load" hx-swap="innerHTML">
						</tbody>
					</table>
				</div>
			</div>
			
			@PlayerEditModal()
		</div>
	}
}

// List fragment and row partials for htmx
templ PlayersFragment(players []PlayerViewModel) {
	if len(players) == 0 {
		<tr>
			<td colspan="5" class="px-6 py-4 text-center text-gray-500">No players found</td>
		</tr>
	} else {
		for _, p := range players {
			@PlayerRow(p)
		}
	}
}

templ PlayerRow(p PlayerViewModel) {
	<tr class="hover:bg-gray-50">
		<td class="px-6 py-4 whitespace-nowrap">
			<code class="text-sm text-gray-900">{ p.UUID }</code>
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{ p.Name }</td>
		<td class="px-6 py-4 whitespace-nowrap">
			if p.Status == "Online" {
				<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Online</span>
			} else {
				<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-200 text-gray-800">Offline</span>
			}
		</td>
		<td class="px-6 py-4">
			<div class="flex flex-wrap gap-1">
				for key, value := range p.Labels {
					<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">{ key }: { value }</span>
				}
			</div>
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
			<button @click="editPlayer({uuid: '{ p.UUID }', name: '{ p.Name }', labels: [], annotations: []})" class="text-blue-600 hover:text-blue-900 transition-colors">
				<i class="fas fa-edit mr-1"></i>Edit
			</button>
		</td>
	</tr>
}

templ PlayerEditModal() {
	<!-- Edit Player Modal -->
	<div x-show="showEditModal" x-cloak class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
		<div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
			<div class="mt-3">
				<div class="flex justify-between items-center mb-4">
					<h3 class="text-lg font-medium text-gray-900">Edit Player</h3>
					<button @click="showEditModal = false" class="text-gray-400 hover:text-gray-600">
						<i class="fas fa-times"></i>
					</button>
				</div>
				
				<form @submit.prevent="savePlayer()" class="space-y-4">
					<div>
						<label class="block text-sm font-medium text-gray-700 mb-1">Player Name</label>
						<input x-model="editingPlayer.name" type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
					</div>
					
					<div>
						<label class="block text-sm font-medium text-gray-700 mb-1">Labels</label>
						<div class="space-y-2">
							<template x-for="(label, index) in editingPlayer.labels" :key="index">
								<div class="flex space-x-2">
									<input x-model="label.key" placeholder="Key" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
									<input x-model="label.value" placeholder="Value" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
									<button type="button" @click="editingPlayer.labels.splice(index, 1)" class="px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">
										<i class="fas fa-times"></i>
									</button>
								</div>
							</template>
						</div>
						<button type="button" @click="editingPlayer.labels.push({key: '', value: ''})" class="mt-2 px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600">
							<i class="fas fa-plus mr-1"></i>Add Label
						</button>
					</div>
					
					<div>
						<label class="block text-sm font-medium text-gray-700 mb-1">Annotations</label>
						<div class="space-y-2">
							<template x-for="(annotation, index) in editingPlayer.annotations" :key="index">
								<div class="flex space-x-2">
									<input x-model="annotation.key" placeholder="Key" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
									<input x-model="annotation.value" placeholder="Value" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
									<button type="button" @click="editingPlayer.annotations.splice(index, 1)" class="px-3 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">
										<i class="fas fa-times"></i>
									</button>
								</div>
							</template>
						</div>
						<button type="button" @click="editingPlayer.annotations.push({key: '', value: ''})" class="mt-2 px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600">
							<i class="fas fa-plus mr-1"></i>Add Annotation
						</button>
					</div>
					
					<div class="flex justify-end space-x-3 pt-4">
						<button type="button" @click="showEditModal = false" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400">
							Cancel
						</button>
						<button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
							Save Changes
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
}
